stages:
  - images
  - deploy
  - Image Scan

default:
  tags:
    - devsecops-instance

variables:
  KUBE_CONTEXT: arc-x/arc-x-k8s-agent:arcx-dev-k8s-agent

# Set K8s context of GitLab Agent
.kube-context:
  before_script:
  - if [ -n "$KUBE_CONTEXT" ]; then kubectl config use-context "$KUBE_CONTEXT"; fi

include:
  - remote: 'https://gitlab.com/prismacloud-public/shift-left/extension/-/raw/master/.pcs.gitlab-ci.yml'

public-ui-app:image:build:
  stage: images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/public-ui-app/Dockerfile --destination $CI_REGISTRY_IMAGE/public-ui-app:$CI_COMMIT_SHORT_SHA

public-ui-web:image:build:
  stage: images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/public-ui-web/Dockerfile --destination $CI_REGISTRY_IMAGE/public-ui-web:$CI_COMMIT_SHORT_SHA

deploy to dev:
  when: manual
  stage: deploy
  extends: [.kube-context]
  image: dtzar/helm-kubectl
  script:
    - envsubst < k8s/arcx-public-ui-configmap.yml | cat -A #kubectl apply -f -
    - envsubst < k8s/arcx-public-ui-app.yml | kubectl apply --validate=false -f -
    - envsubst < k8s/arcx-public-ui-web.yml | kubectl apply --validate=false -f -
  environment:
    name: dev
    url: https://arcx-public-ui.devsecops-dev.aws.epa.gov
    kubernetes:
      namespace: arc-x-public-ui-236-dev
  only:
    - branches
  except:
    - master

prisma-scan:
  stage: Image Scan
  extends:
    - .pcs_compute_scan
  tags:
    - twistcli
  when: manual
  allow_failure: false
  parallel:
   matrix:
     - prisma_cloud_scan_image: ["$CI_REGISTRY_IMAGE/public-ui-web:$CI_COMMIT_SHORT_SHA","$CI_REGISTRY_IMAGE/public-ui-app:$CI_COMMIT_SHORT_SHA"]
  variables:
    prisma_cloud_compute_url: "https://prismacloud.gitlab-prod.aws.epa.gov"
    GIT_STRATEGY: clone
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.epa.gov
    - docker pull $prisma_cloud_scan_image
    - ./image_scan.sh
